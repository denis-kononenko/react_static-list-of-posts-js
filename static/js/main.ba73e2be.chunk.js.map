{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","length","map","id","UserInfo","user","title","PostInfo","post","PostList","posts","getCommentsByPostId","commentsFromServer","filter","postId","postsFromServer","userId","usersFromServer","find","App","ReactDOM","render","document","getElementById"],"mappings":"q5yIAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KAErB,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QChBIG,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACL,IAApBA,EAASC,OACP,qCACE,uBAEA,mBAAG,UAAQ,oBAAX,gCAGF,qBAAKJ,UAAU,cAAf,SACGG,EAASE,KAAI,SAAAT,GAAO,OACnB,cAAC,EAAD,CAA8BA,QAASA,GAArBA,EAAQU,UCXrBC,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBX,EAAgBW,EAAhBX,KAAMC,EAAUU,EAAVV,MAEd,OAAOU,GACL,mBACER,UAAU,WACVC,KAAI,iBAAYH,GAChBW,MAAOZ,EAHT,SAKGA,MCPMa,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBF,EAAgCE,EAAhCF,MAAOV,EAAyBY,EAAzBZ,KAAMS,EAAmBG,EAAnBH,KAAML,EAAaQ,EAAbR,SAE3B,OACE,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCS,IAEjC,8BACG,aAED,cAAC,EAAD,CAAUD,KAAMA,UAIpB,mBAAGR,UAAU,iBAAb,SACGD,IAGH,cAAC,EAAD,CAAaI,SAAUA,QCpBhBS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACrBA,GAA0B,IAAjBA,EAAMT,OAGd,qBAAKJ,UAAU,WAAf,SACGa,EAAMR,KAAI,SAAAM,GAAI,OAAI,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKL,SAHzC,mBAAGN,UAAU,iBAAb,2BCMEc,EAAsB,SAAAR,GAAE,OAC5BS,EAAmBC,QAAO,SAAApB,GAAO,OAAIA,EAAQqB,SAAWX,MAGpDO,EAAQK,EAAgBb,KAAI,SAAAM,GAAI,kCACjCA,GADiC,IAEpCH,MAVkBF,EAUAK,EAAKQ,OATvBC,EAAgBC,MAAK,SAAAb,GAAI,OAAIA,EAAKF,KAAOA,MAAO,MAUhDH,SAAUW,EAAoBH,EAAKL,MAXjB,IAAAA,KAcPgB,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUa,MAAOA,QCrBrBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ba73e2be.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  comments.length === 0 ? (\n    <>\n      <hr />\n\n      <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    </>\n  ) : (\n    <div className=\"CommentList\">\n      {comments.map(comment => (\n        <CommentInfo key={comment.id} comment={comment} />\n      ))}\n    </div>\n  )\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const { name, email } = user;\n\n  return user && (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n      title={name}\n    >\n      {name}\n    </a>\n  );\n};\n","import './PostInfo.scss';\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post }) => {\n  const { title, body, user, comments } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{title}</h3>\n\n        <p>\n          {'Posted by '}\n\n          <UserInfo user={user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      <CommentList comments={comments} />\n    </div>\n  );\n};\n","import './PostList.scss';\nimport { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  !posts || posts.length === 0 ? (\n    <p className=\"NoPostsMessage\">No posts yet</p>\n  ) : (\n    <div className=\"PostList\">\n      {posts.map(post => <PostInfo key={post.id} post={post} />)}\n    </div>\n  )\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nconst getUserById = id => (\n  usersFromServer.find(user => user.id === id) || null\n);\n\nconst getCommentsByPostId = id => (\n  commentsFromServer.filter(comment => comment.postId === id)\n);\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsByPostId(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}